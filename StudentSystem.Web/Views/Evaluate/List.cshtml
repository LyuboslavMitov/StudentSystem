@model IEnumerable<StudentSystem.Web.Models.EvaluateStudentViewModel>
@using System.Linq;
<head>
    @*<script src="~/Misc/TablesDesign/javascripts/jquery-1.9.1.min.js" type="text/javascript"></script>
    <script src="~/Misc/TablesDesign/javascripts/jquery.heavyTable.js" type="text/javascript"></script>*@
    <link rel="stylesheet" type="text/css" href="~/Misc/TablesDesign/stylesheets/normalize.css">
    <link rel="stylesheet" type="text/css" href="~/Misc/TablesDesign/stylesheets/style.css">
</head>
<body>
    <div class='main'>
        <table class="heavyTable">
            <thead>
                <tr>
                    <th class="text-center" style="width: auto">
                        @Html.DisplayNameFor(model => model.Number)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SecondName)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)

                    </th>

                    @*<th>
                        @Html.DisplayNameFor(model => model.StudentClass)

                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.Marks)

                    </th>
                    <th></th>
                   
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Number)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SecondName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>

                        @*<td>
                            @Html.DisplayFor(modelItem => item.StudentClass)
                        </td>*@

                        <td>
                            @{
                                var srudentMarksId = item.StudentID.ToString() + "_marks";
                            }
                            <div id=@srudentMarksId>

                                @String.Join(", ", item.Marks.Select(a => a.Grade.ToString()).ToArray())                 
                            </div>
                        </td>

                        <td>
                            @*@Html.ActionLink("Edit", "Edit", new { id=item.StudentID }) |
                                @Html.ActionLink("Детайли", "Details", new*@
                            @*{
                                    studentId = item.StudentID.ToString(),
                                    classId = item.StudentClassID.ToString(),
                                    subjectId = item.SubjectID.ToString()
                                })*@
                            @*@Html.ActionLink("Delete", "Delete", new { id=item.StudentID })*@
                            <div class="form-group">

                                @using (Ajax.BeginForm("Create", new AjaxOptions
                                {
                                    InsertionMode = InsertionMode.Replace,
                                    UpdateTargetId = item.StudentID.ToString() + "_marks",
                                }))
                                {

                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(modelItem => item.StudentID, new { Name = "studentId" })
                                    @Html.HiddenFor(modelItem => item.SubjectID, new { Name = "subjectId" })
                                    @Html.EditorFor(modelItem => item.NewMark, null, "newMarkValue", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("newMarkValue", new { @class = "text-danger" })
                                    <input type="submit" value="Добави" class="btn btn-primary" />
                                }
                            </div>
                            <div class="form-group">
                                @using (Ajax.BeginForm("DeleteLast", new AjaxOptions
                                {
                                    InsertionMode = InsertionMode.Replace,
                                    UpdateTargetId = item.StudentID.ToString() + "_marks",
                                    Confirm = "Сигурни ли сте?"
                                }))
                                {

                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(modelItem => item.StudentID, new { Name = "studentId" })
                                    @Html.HiddenFor(modelItem => item.SubjectID, new { Name = "subjectId" })
                                   
                                    <input type="submit" value="Изтрий" class="btn btn-primary" />
                                }
                            </div>
                        </td>
                    </tr>

                                }
            </tbody>
        </table>

        
    </div>
</body>
<script type="text/javascript" language=javascript>
            $.validator.unobtrusive.parse(document);
</script>
<script src="~/Misc/TablesDesign/javascripts/script.js" type="text/javascript">
</script>